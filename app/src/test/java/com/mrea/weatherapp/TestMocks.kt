package com.mrea.weatherapp

import com.mrea.weatherapp.data.GetWeatherResponse
import com.mrea.weatherapp.data.LocationResponse
import com.mrea.weatherapp.data.ObservationResponse
import com.mrea.weatherapp.data.ObservationsResponse
import com.mrea.weatherapp.domain.Weather
import com.mrea.weatherapp.domain.WeatherType

fun buildMockWeather(
    isNight: Boolean = false,
    zipCode: String = "",
    weatherType: WeatherType = WeatherType.Sunny,
    description: String = "",
    skyInfo: Int = 0,
    skyDescription: String = "",
    temperature: Double = 0.0,
    temperatureDesc: String = "",
    comfort: Double = 0.0,
    highTemperature: String = "",
    lowTemperature: String = "",
    humidity: Int = 0,
    dewPoint: Double = 0.0,
    precipitation1H: String = "",
    precipitation3H: String = "",
    precipitation6H: String = "",
    precipitation12H: String = "",
    precipitation24H: String = "",
    precipitationDesc: String = "",
    airInfo: String = "",
    airDescription: String = "",
    windSpeed: String = "",
    windDirection: String = "",
    windDesc: String = "",
    windDescShort: String = "",
    barometerPressure: Double = 0.0,
    barometerTrend: String = "",
    visibility: String = "",
    snowCover: String = "",
    icon: Int = 0,
    iconName: String = "",
    iconLink: String = "",
    ageMinutes: Int = 0,
    activeAlerts: Int = 0,
    country: String = "",
    state: String = "",
    city: String = "",
    latitude: Double = 0.0,
    longitude: Double = 0.0,
    distance: Double = 0.0,
    elevation: Int = 0,
    utcTime: String = ""
): Weather = Weather(
    isNight = isNight,
    zipCode = zipCode,
    weatherType = weatherType,
    description = description,
    skyInfo = skyInfo,
    skyDescription = skyDescription,
    temperature = temperature,
    temperatureDesc = temperatureDesc,
    comfort = comfort,
    highTemperature = highTemperature,
    lowTemperature = lowTemperature,
    humidity = humidity,
    dewPoint = dewPoint,
    precipitation1H = precipitation1H,
    precipitation3H = precipitation3H,
    precipitation6H = precipitation6H,
    precipitation12H = precipitation12H,
    precipitation24H = precipitation24H,
    precipitationDesc = precipitationDesc,
    airInfo = airInfo,
    airDescription = airDescription,
    windSpeed = windSpeed,
    windDirection = windDirection,
    windDesc = windDesc,
    windDescShort = windDescShort,
    barometerPressure = barometerPressure,
    barometerTrend = barometerTrend,
    visibility = visibility,
    snowCover = snowCover,
    icon = icon,
    iconName = iconName,
    iconLink = iconLink,
    ageMinutes = ageMinutes,
    activeAlerts = activeAlerts,
    country = country,
    state = state,
    city = city,
    latitude = latitude,
    longitude = longitude,
    distance = distance,
    elevation = elevation,
    utcTime = utcTime
)

fun buildMockWeatherResponse(
    dayLight: Boolean = true,
    description: String = "",
    skyInfo: Int = 0,
    skyDescription: String = "",
    temperature: Double = 0.0,
    temperatureDesc: String = "",
    comfort: Double = 0.0,
    highTemperature: String = "",
    lowTemperature: String = "",
    humidity: Int = 0,
    dewPoint: Double = 0.0,
    precipitation1H: String = "",
    precipitation3H: String = "",
    precipitation6H: String = "",
    precipitation12H: String = "",
    precipitation24H: String = "",
    precipitationDesc: String = "",
    airInfo: String = "",
    airDescription: String = "",
    windSpeed: String = "",
    windDirection: String = "",
    windDesc: String = "",
    windDescShort: String = "",
    barometerPressure: Double = 0.0,
    barometerTrend: String = "",
    visibility: String = "",
    snowCover: String = "",
    icon: Int = 0,
    iconName: String = "",
    iconLink: String = "",
    ageMinutes: Int = 0,
    activeAlerts: Int = 0,
    country: String = "",
    state: String = "",
    city: String = "",
    latitude: Double = 0.0,
    longitude: Double = 0.0,
    distance: Double = 0.0,
    elevation: Int = 0,
    utcTime: String = ""
): GetWeatherResponse = GetWeatherResponse(
    observations = ObservationsResponse(
        location = listOf(
            LocationResponse(
                observation = listOf(
                    ObservationResponse(
                        description = description,
                        skyInfo = skyInfo,
                        skyDescription = skyDescription,
                        temperature = temperature,
                        temperatureDesc = temperatureDesc,
                        comfort = comfort,
                        highTemperature = highTemperature,
                        lowTemperature = lowTemperature,
                        humidity = humidity,
                        dewPoint = dewPoint,
                        precipitation1H = precipitation1H,
                        precipitation3H = precipitation3H,
                        precipitation6H = precipitation6H,
                        precipitation12H = precipitation12H,
                        precipitation24H = precipitation24H,
                        precipitationDesc = precipitationDesc,
                        airInfo = airInfo,
                        airDescription = airDescription,
                        windSpeed = windSpeed,
                        windDirection = windDirection,
                        windDesc = windDesc,
                        windDescShort = windDescShort,
                        barometerPressure = barometerPressure,
                        barometerTrend = barometerTrend,
                        visibility = visibility,
                        snowCover = snowCover,
                        icon = icon,
                        iconName = iconName,
                        iconLink = iconLink,
                        ageMinutes = ageMinutes,
                        activeAlerts = activeAlerts,
                        country = country,
                        state = state,
                        city = city,
                        latitude = latitude,
                        longitude = longitude,
                        distance = distance,
                        elevation = elevation,
                        utcTime = utcTime,
                        daylight = if (dayLight) "D" else "N"
                    )
                ),
                country = "",
                state = "",
                city = "",
                latitude = 0.0,
                longitude = 0.0,
                distance = 0.0,
                timezone = 0
            )
        )
    ),
    feedCreation = "",
    metric = false
)